axis.ticks.y = element_line(color="grey40"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background = element_blank(),
strip.text = element_text(size = 10, face="italic"),
strip.background = element_blank(),
plot.margin = margin(.2,.2,.2,.2, "inches"))
ggsave("Outputs2/plot_depvar_hist.png", plot=p_hist, device="png", width=9, height=5)
## Average scores by category ---------------------------------------------------------
d_cat <- d %>%
select(company_name, coding_category:hd_disaggregated) %>%
mutate(across(everything(), ~replace_na(., 0))) %>%
group_by(coding_category, company_name) %>%
mutate(hd_score = sum(
sum(hd_data_present, na.rm=T),
sum(hd_rel_to_peers, na.rm=T),
sum(hd_rel_to_prev_period, na.rm=T),
sum(hd_rel_to_targets, na.rm=T),
sum(hd_abs_and_normalized, na.rm=T),
sum(hd_disaggregated, na.rm=T))) %>%
select(-c(hd_data_present:hd_disaggregated)) %>%
mutate(hd_score_binary = if_else(hd_score==0, 0, 1)) %>%
group_by(coding_category) %>%
summarise(mean_disclosure_sd = mean(sd_score),
mean_disclosure_hd = mean(hd_score),
mean_disclosure_hd_binary = mean(hd_score_binary)) %>%
pivot_longer(mean_disclosure_sd:mean_disclosure_hd_binary,
names_to = "disclosure_type", values_to = "disclosure_value")
p_cat <- ggplot(data=d_cat) +
geom_col_pattern(
aes(x=str_wrap(coding_category, width = 15),
y=disclosure_value,
pattern = disclosure_type),
pattern_spacing = 0.02,
fill="white",
color= "black",
width=.75,
position=position_dodge(width=.75)) +
scale_y_continuous(
limits = c(0,1),
breaks=seq(0, 1, by=.1),
expand = c(0.02,0)) +
scale_x_discrete(
position="bottom",
guide = guide_axis(angle = 45),
limits = str_wrap(levels(d$coding_category), width=15)) +
theme(
panel.background = element_blank(),
panel.grid.major.y = element_line(color="grey40"),
axis.ticks.y = element_line(color="grey40"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top",  #c(.9, 1.14)
legend.title = element_blank(),
axis.text.x = element_text(size=11),
axis.title.x = element_blank(),
plot.margin = margin(.2,.2,.1,.2, "inches")) +
scale_pattern_discrete(
breaks=c("mean_disclosure_hd","mean_disclosure_hd_binary", "mean_disclosure_sd"),
labels=c("hard disclosure (total)", "hard disclosure (yes/no)","soft disclosure")) +
labs(title = "Average hard and soft disclosure scores by human rights category",
subtitle = "Maximum for 'soft disclosure' is 1\nMaximum for 'hard disclosure (total)' is 6\nMaximum for 'hard disclosure (yes/no)' is 1 (all scores above 0 are changed to 1)",
y = "average disclosure score")
ggsave("Outputs2/plot_depvar_categories.png", plot=p_cat, device="png", width=9, height=5)
source("~/AAA Uni/AAA Masterstudium/###MA thesis###/Final_analysis/MA thesis analysis script.R")
# Packages ----------------------------------------------------------------
library(here)
library(rio)
library(MASS)
library(stargazer) # for R >= 4.2.2 run this bugfix https://gist.github.com/alexeyknorre/b0780836f4cec04d41a863a683f91b53
library(tidyverse)
library(AER)
library(readtext)
library(quanteda)
library(ggplot2)
library(stringr)
library(scales)
library(lemon)
library(ggpattern)
library(flextable)
library(ggcorrplot)
library(devtools)
#devtools::install_github("caijun/ggcorrplot2")
library(ggcorrplot2)
library(ggforce) #implicit dependency of ggcorrplot2
library(performance)
library(mice)
library(pscl)
library(poissonreg)
library(conflicted)
conflicted::conflict_prefer("filter", "dplyr")
conflicted::conflict_prefer("select", "dplyr")
# Setting up the environment and data import-------------------------------
# Clear the R environment
rm(list=ls())
# Set the working directory (should be redundant thanks to .Rproj)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(here())
# Import data
country_coding <- import("country_coding.xlsx")
d <- import("coding_sheet.xlsx")
# Data manipulation -------------------------------------------------------
# defining factor levels in correct order for HR categories
d$coding_category <- factor(
d$coding_category,
levels = c(
"Investment HR incorporation",
"Supplier HR screening",
"Employee HR training",
"Non-discrimination",
"Freedom of association",
"Child labor",
"Forced labor",
"Security practices",
"Indigenous rights",
"HR impact assessment",
"Remediation"
))
# adjusting the data type of some variables and adding country level variables
d <- d %>%
mutate(across(assurance:hr_statement, ~as.numeric(.))) %>%
# there is no distinction between mainland China and HK possible, so the two are merged
mutate(headquarters_country = if_else(headquarters_country=="Hong Kong","China",headquarters_country)) %>%
left_join(country_coding,by=c("headquarters_country"="Country")) %>%
mutate(mandatory_regulation_level = as.numeric(mandatory_regulation_level),
soft_law_level = as.numeric(soft_law_level),
ROA = Profit/Assets)
# Tables and plots --------------------------------------------------------
dir.create("Outputs")
## Histogram for dep variables ---------------------------------------------
d_hist <- d %>%
group_by(company_name) %>%
summarise(sd_score = sum(sd_score, na.rm=T),
hd_score = sum(
sum(hd_data_present, na.rm=T),
sum(hd_rel_to_peers, na.rm=T),
sum(hd_rel_to_prev_period, na.rm=T),
sum(hd_rel_to_targets, na.rm=T),
sum(hd_abs_and_normalized, na.rm=T),
sum(hd_disaggregated, na.rm=T))) %>%
select(sd_score, hd_score) %>%
pivot_longer(c(sd_score, hd_score),
names_to = "disclosure_type",
values_to = "disclosure_score") %>%
group_by(disclosure_type, disclosure_score) %>%
summarise(count = n())
p_hist <- ggplot() +
geom_col(aes(x=disclosure_score, y=count),
fill="lightgrey",
color="black",
data=d_hist) +
geom_vline(aes(xintercept=mean_value),
linetype = "11",
linewidth=1.2,
data=d_hist %>% mutate(mean_value=sum(disclosure_score*count)/sum(count))) +
geom_label(aes(x=disclosure_score, y=count, label=count,),
size=3,
fill="white",
vjust=-.2,
data=d_hist) +
lemon::facet_rep_grid(
. ~ disclosure_type,
labeller = labeller(
disclosure_type = c("hd_score"= "Hard human rights disclosure score (max. possible: 66)",
"sd_score" ="Soft human rights disclosure score (max. possible: 11)")),
repeat.tick.labels=T) +
scale_x_continuous(
breaks = 0:12) +
scale_y_continuous(
breaks = scales::breaks_width(5),
limits = c(0,40),
expand = c(0.02,0)) +
labs(title = "Univariate distribution of hard and soft human rights disclosure scores",
subtitle = "The vertical line marks the overall average",
x = "disclosure score",
y = "count of companies") +
theme(
panel.grid.major.y = element_line(color="grey40"),
axis.ticks.y = element_line(color="grey40"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background = element_blank(),
strip.text = element_text(size = 10, face="italic"),
strip.background = element_blank(),
plot.margin = margin(.2,.2,.2,.2, "inches"))
ggsave("Outputs/plot_depvar_hist.png", plot=p_hist, device="png", width=9, height=5)
## Average scores by category ---------------------------------------------------------
d_cat <- d %>%
select(company_name, coding_category:hd_disaggregated) %>%
mutate(across(everything(), ~replace_na(., 0))) %>%
group_by(coding_category, company_name) %>%
mutate(hd_score = sum(
sum(hd_data_present, na.rm=T),
sum(hd_rel_to_peers, na.rm=T),
sum(hd_rel_to_prev_period, na.rm=T),
sum(hd_rel_to_targets, na.rm=T),
sum(hd_abs_and_normalized, na.rm=T),
sum(hd_disaggregated, na.rm=T))) %>%
select(-c(hd_data_present:hd_disaggregated)) %>%
mutate(hd_score_binary = if_else(hd_score==0, 0, 1)) %>%
group_by(coding_category) %>%
summarise(mean_disclosure_sd = mean(sd_score),
mean_disclosure_hd = mean(hd_score),
mean_disclosure_hd_binary = mean(hd_score_binary)) %>%
pivot_longer(mean_disclosure_sd:mean_disclosure_hd_binary,
names_to = "disclosure_type", values_to = "disclosure_value")
p_cat <- ggplot(data=d_cat) +
geom_col_pattern(
aes(x=str_wrap(coding_category, width = 15),
y=disclosure_value,
pattern = disclosure_type),
pattern_spacing = 0.02,
fill="white",
color= "black",
width=.75,
position=position_dodge(width=.75)) +
scale_y_continuous(
limits = c(0,1),
breaks=seq(0, 1, by=.1),
expand = c(0.02,0)) +
scale_x_discrete(
position="bottom",
guide = guide_axis(angle = 45),
limits = str_wrap(levels(d$coding_category), width=15)) +
theme(
panel.background = element_blank(),
panel.grid.major.y = element_line(color="grey40"),
axis.ticks.y = element_line(color="grey40"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top",  #c(.9, 1.14)
legend.title = element_blank(),
axis.text.x = element_text(size=11),
axis.title.x = element_blank(),
plot.margin = margin(.2,.2,.1,.2, "inches")) +
scale_pattern_discrete(
breaks=c("mean_disclosure_hd","mean_disclosure_hd_binary", "mean_disclosure_sd"),
labels=c("hard disclosure (total)", "hard disclosure (yes/no)","soft disclosure")) +
labs(title = "Average hard and soft disclosure scores by human rights category",
subtitle = "Maximum for 'soft disclosure' is 1\nMaximum for 'hard disclosure (total)' is 6\nMaximum for 'hard disclosure (yes/no)' is 1 (all scores above 0 are changed to 1)",
y = "average disclosure score")
ggsave("Outputs/plot_depvar_categories.png", plot=p_cat, device="png", width=9, height=5)
## Average scores by disclosure criteria ---------------------------------------------------------
d_criteria <- d %>%
select(hd_data_present:hd_disaggregated, company_name) %>%
mutate(across(everything(), ~replace_na(., 0))) %>%
group_by(company_name) %>%
summarise(across(hd_data_present:hd_disaggregated, ~sum(.))) %>%
select(-company_name) %>%
pivot_longer(hd_data_present:hd_disaggregated,
names_to = "criterium",
values_to = "score") %>%
mutate(score_binary = if_else(score==0, 0, 1)) %>%
group_by(criterium) %>%
summarise(score = mean(score),
score_binary = mean(score_binary)) %>%
pivot_longer(score:score_binary,
names_to = "score_type",
values_to = "score_value") %>%
mutate(criterium = factor(criterium)) %>%
mutate(criterium = fct_relevel(
fct_recode(criterium,
"data present" = "hd_data_present",
"rel. to peers" = "hd_rel_to_peers",
"rel. to prev. period" = "hd_rel_to_prev_period",
"rel. to targets" = "hd_rel_to_targets",
"abs. and normalized" = "hd_abs_and_normalized",
"disaggregated" = "hd_disaggregated"),
"data present",
"rel. to peers",
"rel. to prev. period",
"rel. to targets",
"abs. and normalized",
"disaggregated"))
p_crit <-  ggplot(data=d_criteria) +
geom_col_pattern(
aes(
x=criterium,
y=score_value,
pattern=score_type),
position="dodge",
#width=.85,
pattern_spacing = 0.02,
fill="white",
color= "black") +
scale_y_continuous(
limits = c(0,.72),
breaks=seq(0, .7, by=.1),
expand = c(0.02,0)) +
scale_x_discrete(
limits = levels(d_criteria)) +
scale_pattern_discrete(labels = c("average (total)", "average (yes/no)")) +
theme(
panel.background = element_blank(),
panel.grid.major.y = element_line(color="grey40"),
axis.ticks.y = element_line(color="grey40"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(.9, 1.08),
legend.title = element_blank(),
axis.text.x = element_text(size = 11),
axis.title.x = element_blank(),
plot.margin = margin(.2,.2,.2,.2, "inches")) +
labs(
title = "Average hard disclosure scores by disclosure criterium",
subtitle = "Maximum for 'average (total)' is 11\nMaximum for 'average (yes/no)' is 1 (all scores above 0 are changed to 1)",
y = "average hard disclosure score")
ggsave("Outputs/plot_depvar_criteria.png", plot=p_crit, device="png", width=9, height=4.5)
## Frequency and prop table ------------------------------------------------
d_depvar_table <- d %>%
select(coding_category:hd_disaggregated) %>%
group_by(coding_category) %>%
reframe(across(
everything(),
# display the sum of companies on the left and the percentage on the right
~paste0(
sum(., na.rm=T),
" / ",
round(mean(., na.rm=T)*100, digits = 1),
"%"
)))
d_depvar_table %>%
flextable::as_flextable() %>%
flextable::save_as_docx(path="Outputs/table_depvar.docx")
# Bringing the data into its final shape ----------------------------------
## Summarise disclosure scores ---------------------------------------------
d <- d %>%
group_by(company_name) %>%
mutate(sd_score = sum(!is.na(sd_score)),
hd_score = sum(
sum(!is.na(hd_data_present)),
sum(!is.na(hd_rel_to_peers)),
sum(!is.na(hd_rel_to_prev_period)),
sum(!is.na(hd_rel_to_targets)),
sum(!is.na(hd_abs_and_normalized)),
sum(!is.na(hd_disaggregated)))) %>%
select(
-coding_category,
-c(hd_data_present:hd_disaggregated)) %>%
filter(if_any(c(assurance,hr_report,hr_policy,hr_statement), ~!is.na(.))) %>%
distinct() %>%
mutate(HR_report = ifelse(hr_report==1|hr_policy==1|hr_statement==1, 1, 0))
d <- d %>%
select(
company_name,
HR_incident_count,
HRP_index,
headquarters_country,
sd_score,
hd_score,
assurance,
HR_report,
ROA,
logged_Assets,
soft_law_level,
mandatory_regulation_level)
## Add report length variable ----------------------------------------------
# first, unzip the "Folders_CSR reports.zip" file
# using unzip() is unreliable, so better do it within the OS's file explorer
# the code below was used to change the file names in such a way that
# they contain the company name to enable merging with the full data set
# downstream. however, as I have already taken care of this step, the code
# below should not be executed anymore
# # first, get list of paths to csr reports
# oldnames <- list.files("./Folders_CSR reports/", full.names = T, recursive = T)[-51] # R thinks theres a desktop.ini file even though I can't see it
# # construct new filepaths where the pdfs are renamed as reprisk companies
# newnames <- file.path(
#   list.files("./Folders_CSR reports/", full.names = T),
#   paste0(str_extract(list.files("./Folders_CSR reports/"), "(?<=---\\s).*"), ".pdf"))
# # notet that there is a problem with Zurich and JPMC because file paths got too long
# # these have to be renamed manually
# # as I've already done this step, the code below is commented out
# # file.rename(oldnames, newnames)
# read in all pdfs, will take about 3 minutes
# 'invalid font weight' errors can be safely ignored
txt <- suppressWarnings(readtext::readtext("./Folders_CSR reports/*"))
txt <- suppressWarnings(readtext::readtext("/Folders_CSR reports/*"))
txt <- readtext::readtext(paste0("/Folders_CSR reports/*"))
txt <- readtext::readtext(paste0("/Folders_CSR reports/*"))
txt <- readtext::readtext(paste0("/Folders_CSR reports/*"))
txt <- readtext::readtext(paste0(here(),"/Folders_CSR reports/*"))
txt <- readtext::readtext("./Folders_CSR reports/*")
txt <- suppressWarnings(
readtext::readtext("./Folders_CSR reports/*"))
txt <- readtext::readtext("/Folders_CSR reports/*")
txt <- readtext::readtext("/Folders_CSR reports/")
txt <- readtext::readtext("/Folders_CSR reports")
txt <- readtext::readtext("/Folders_CSR reports/*")
txt <- readtext::readtext("./Folders_CSR reports/*")
txt <- suppressWarnings(readtext::readtext("./Folders_CSR reports/*"))
# read in all pdfs, will take about 3 minutes
# 'invalid font weight' errors can be safely ignored
txt <- readtext::readtext("./Folders_CSR reports/*")
# read in all pdfs, will take about 3 minutes
# 'invalid font weight' errors can be safely ignored
txt <- readtext::readtext("./Folders_CSR reports/*")
txt <- txt[1:50, ] # get rid of desktop.ini
txt <- readtext::readtext("./Folders_CSR reports/*")
list.dirs()
getwd()
readtext::readtext("./Folders_CSR reports/__001 --- Industrial and Commercial Bank of China Ltd (ICBC)")
readtext::readtext("./Folders_CSR reports/*")
readtext::readtext("./Folders_CSR reports/.*")
readtext::readtext("./Folders_CSR reports/*")
list.dirs()
list.dirs("./testdir")
list.dirs("./testdir/*")
list.dirs("./testdir/")
list.dirs("/testdir/")
list.dirs("./testdir/")
list.dirs("./Folders_CSR reports/")
txt <- readtext::readtext("./Folders_CSR reports/")
list.dirs("./Folders_CSR reports/")
list.dirs("./Folders_CSR reports/")[2:51]
txt <- readtext(list.dirs("./Folders_CSR reports/")[2:51])
list.dirs("./Folders_CSR reports/")[2:51]
# Packages ----------------------------------------------------------------
library(here)
library(rio)
library(MASS)
library(stargazer) # for R >= 4.2.2 run this bugfix https://gist.github.com/alexeyknorre/b0780836f4cec04d41a863a683f91b53
library(tidyverse)
library(AER)
library(readtext)
library(quanteda)
library(ggplot2)
library(stringr)
library(scales)
library(lemon)
library(ggpattern)
library(flextable)
library(ggcorrplot)
library(devtools)
#devtools::install_github("caijun/ggcorrplot2")
library(ggcorrplot2)
library(ggforce) #implicit dependency of ggcorrplot2
library(performance)
library(mice)
library(pscl)
library(poissonreg)
library(conflicted)
conflicted::conflict_prefer("filter", "dplyr")
conflicted::conflict_prefer("select", "dplyr")
# Setting up the environment and data import-------------------------------
# Clear the R environment
rm(list=ls())
# Set the working directory (should be redundant thanks to .Rproj)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(here())
# Import data
country_coding <- import("country_coding.xlsx")
d <- import("coding_sheet.xlsx")
# Data manipulation -------------------------------------------------------
# defining factor levels in correct order for HR categories
d$coding_category <- factor(
d$coding_category,
levels = c(
"Investment HR incorporation",
"Supplier HR screening",
"Employee HR training",
"Non-discrimination",
"Freedom of association",
"Child labor",
"Forced labor",
"Security practices",
"Indigenous rights",
"HR impact assessment",
"Remediation"
))
# adjusting the data type of some variables and adding country level variables
d <- d %>%
mutate(across(assurance:hr_statement, ~as.numeric(.))) %>%
# there is no distinction between mainland China and HK possible, so the two are merged
mutate(headquarters_country = if_else(headquarters_country=="Hong Kong","China",headquarters_country)) %>%
left_join(country_coding,by=c("headquarters_country"="Country")) %>%
mutate(mandatory_regulation_level = as.numeric(mandatory_regulation_level),
soft_law_level = as.numeric(soft_law_level),
ROA = Profit/Assets)
## Summarise disclosure scores ---------------------------------------------
d <- d %>%
group_by(company_name) %>%
mutate(sd_score = sum(!is.na(sd_score)),
hd_score = sum(
sum(!is.na(hd_data_present)),
sum(!is.na(hd_rel_to_peers)),
sum(!is.na(hd_rel_to_prev_period)),
sum(!is.na(hd_rel_to_targets)),
sum(!is.na(hd_abs_and_normalized)),
sum(!is.na(hd_disaggregated)))) %>%
select(
-coding_category,
-c(hd_data_present:hd_disaggregated)) %>%
filter(if_any(c(assurance,hr_report,hr_policy,hr_statement), ~!is.na(.))) %>%
distinct() %>%
mutate(HR_report = ifelse(hr_report==1|hr_policy==1|hr_statement==1, 1, 0))
d <- d %>%
select(
company_name,
HR_incident_count,
HRP_index,
headquarters_country,
sd_score,
hd_score,
assurance,
HR_report,
ROA,
logged_Assets,
soft_law_level,
mandatory_regulation_level)
txt <- readtext::readtext("./Folders_CSR reports*/")
